function f(e,r,t){const o=e.createProgram(),s=c(e,e.VERTEX_SHADER,r),a=c(e,e.FRAGMENT_SHADER,t);return e.attachShader(o,s),e.attachShader(o,a),e.linkProgram(o),e.useProgram(o),o}function c(e,r,t){const o=e.createShader(r);return e.shaderSource(o,t),e.compileShader(o),o}function p(e,r){const{offsetX:t,offsetY:o}=e,{width:s,height:a}=r.getBoundingClientRect(),[n,i]=[s/2,a/2];return{x:(t-n)/n,y:(i-o)/i}}function u(e,r){e.traverse(t=>{t.material&&t.material.dispose(),t.geometry&&t.geometry.dispose(),t.dispose&&t.dispose(),t=null}),r.forceContextLoss(),r.dispose(),e.clear()}export{u as d,p as g,f as i};
